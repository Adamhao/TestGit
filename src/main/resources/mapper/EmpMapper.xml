<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.etoak.mapper.EmpMapper">
	
	<sql id="emp-columns">
		id,ename,eno,job,salary,did,hiredate,password
	</sql>

    <insert id="add" parameterType="emp">
        insert into emp (<include refid="emp-columns"></include>)
        values
        (#{id},#{ename},#{eno},#{job},#{salary},#{did},#{hiredate},#{password})
    </insert>

    <select id="getEmpByEno" parameterType="string" resultType="emp">
        select <include refid="emp-columns"></include>
        from emp
        where eno = #{eno}
    </select>

    <select id="queryEmpList" parameterType="emp" resultType="emp">
        select
          a.*,b.dname as dname
        from
          emp a
        left join
          dept b
        on
          a.did = b.id
        <where>
            <if test="ename != null and ename != ''">
                and instr(ename,#{ename})
            </if>

            <if test="did != null">
                and did = #{did}
            </if>

            <if test="startTime != null">
                and hiredate >= #{startTime}
            </if>

            <if test="endTime != null">
                and hiredate <![CDATA[<=]]> #{endTime}
            </if>
        </where>
    </select>

    <select id="getEmpById" parameterType="int" resultType="emp">
        select
          a.*,b.dname as dname
        from
          emp a
        left join dept b
        on a.did = b.id
        where
          a.id = #{id}
    </select>

    <update id="updateEmp" parameterType="emp">
        update emp
        <set>
            <if test="ename != null and ename != ''">ename = #{ename},</if>
            <if test="did != null">did = #{did},</if>
            <if test="job != null and job != ''">job = #{job},</if>
            <if test="salary != null">salary = #{salary},</if>
        </set>

        where id = #{id}

    </update>

    <delete id="remove" parameterType="list">
        delete from emp
        where id in
        <foreach collection="list" item="id" open="(" close=")" separator=",">
            #{id}
        </foreach>
    </delete>

    <update id="updatePwd" parameterType="emp">
        update emp
        set password = #{password}
        where id = #{id}
    </update>

</mapper>